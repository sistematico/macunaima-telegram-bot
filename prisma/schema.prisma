generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  uid       BigInt    @unique @db.BigInt
  apelido   String?
  nome      String
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  banned    Boolean   @default(false)
  messages  Message[]
  chats     Chat[]    @relation("UserChats")
  warnings  Warning[] // Add this line
}

model Chat {
  id            Int             @id @default(autoincrement())
  cid           BigInt          @unique @db.BigInt
  name          String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  isGroup       Boolean         @default(false)
  bannedContent BannedContent[]
  messages      Message[]
  users         User[]          @relation("UserChats")
  warnings      Warning[] // Add this line
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  chatId    Int
  chat      Chat     @relation(fields: [chatId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

// Add this new model
model Warning {
  id        Int      @id @default(autoincrement())
  reason    String
  createdAt DateTime @default(now())
  userId    Int
  chatId    Int
  user      User     @relation(fields: [userId], references: [id])
  chat      Chat     @relation(fields: [chatId], references: [id])
}

model BannedContent {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  chatId    Int?
  chat      Chat?    @relation(fields: [chatId], references: [id])
}

enum Role {
  OWNER
  ADMIN
  USER
  BOT
}
